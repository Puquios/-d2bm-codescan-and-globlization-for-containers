---
stages:
- name: Globalize
  inputs:
  - type: git
    branch: master
  jobs:
  - name: Machine translation
    type: builder
    extension_id: ibm.devops.services.pipeline.globalization.builder
    target:
      url: ${CF_TARGET_URL}
      organization: ${CF_ORGANIZATION}
      space: ${CF_SPACE}
    SETUP_SERVICE_SPACE: 'true'
    INPUT_PATTERN: Messages_en.properties
- name: Package Application
  inputs:
  - type: job
    stage: Globalize
    job: Machine translation
  triggers:
  - type: stage
  jobs:
  - name: Ant build
    type: builder
    artifact_dir: output
    build_type: ant
    script: |-
      #!/bin/bash
      ant
- name: Security Scanning
  inputs:
  - type: job
    stage: Package Application
    job: Ant build
  triggers:
  - type: stage
  properties:
  - name: SLACK_WEBHOOK_PATH
    value: https://hooks.slack.com/services/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
    type: text
  jobs:
  - name: Static code analysis
    type: tester
    fail_stage: false
    extension_id: ibm.devops.services.pipeline.appscan.static.builder
    target:
      url: ${CF_TARGET_URL}
      organization: ${CF_ORGANIZATION}
      space: ${CF_SPACE}
    SETUP_SERVICE_SPACE: 'true'
    WAIT_TIME: '10'
- name: Containerize
  inputs:
  - type: job
    stage: Package Application
    job: Ant build
  triggers:
  - type: stage
  properties:
  - name: SLACK_WEBHOOK_PATH
    value: ''
    type: text
  jobs:
  - name: Docker build
    type: builder
    extension_id: ibm.devops.services.pipeline.container.builder
    target:
      url: ${CF_TARGET_URL}
      organization: ${CF_ORGANIZATION}
      space: ${CF_SPACE}
    IMAGE_NAME: ${CF_APP}
    USE_CACHED_LAYERS: 'true'
    COMMAND: "#!/bin/bash\n# The following colors have been defined to help with presentation\
      \ of logs: green, red, label_color, no_color.  \necho -e \"${label_color}Starting\
      \ build script${no_color}\"\n\n# The IBM Container Service CLI (ice), Git client\
      \ (git), IDS Inventory CLI (ids-inv) and Python 2.7.3 (python) have been installed.\n\
      # Based on the organization and space selected in the Job credentials are in\
      \ place for both IBM Container Service and IBM Bluemix \n#####################\n\
      # Run unit tests    #\n#####################\necho -e \"${label_color}No unit\
      \ tests cases have been checked in ${no_color}\"\n\n######################################\n\
      # Build Container via Dockerfile     #\n######################################\n\
      \n# REGISTRY_URL=${CCS_REGISTRY_HOST}/${NAMESPACE}\n# FULL_REPOSITORY_NAME=${REGISTRY_URL}/${IMAGE_NAME}:${APPLICATION_VERSION}\n\
      \nif [ -f Dockerfile ]; then \n    echo -e \"${label_color}Building ${FULL_REPOSITORY_NAME}\
      \ ${no_color}\"\n    BUILD_COMMAND=\"\"\n    if [ \"${USE_CACHED_LAYERS}\" ==\
      \ \"true\" ]; then \n        BUILD_COMMAND=\"ice build --pull --tag ${FULL_REPOSITORY_NAME}\
      \ ${WORKSPACE}\"\n        ${BUILD_COMMAND}\n        RESULT=$?\n    else \n \
      \       BUILD_COMMAND=\"ice build --no-cache --tag ${FULL_REPOSITORY_NAME} ${WORKSPACE}\"\
      \n        ${BUILD_COMMAND}\n        RESULT=$?\n    fi \n\n    if [ $RESULT -ne\
      \ 0 ]; then\n        echo -e \"${red}Error building image ${no_color}\" | tee\
      \ -a \"$ERROR_LOG_FILE\"\n        echo \"Build command: ${BUILD_COMMAND}\"\n\
      \        ice info \n        ice images\n        ${EXT_DIR}/print_help.sh\n \
      \       exit 1\n    else\n        echo -e \"${green}Container build of ${FULL_REPOSITORY_NAME}\
      \ was successful ${no_color}\"\n    fi  \nelse \n    echo -e \"${red}Dockerfile\
      \ not found in project${no_color}\"\n    exit 1\nfi  \n\n######################################################################################\n\
      # Copy any artifacts that will be needed for deployment and testing to $WORKSPACE\
      \    #\n######################################################################################\n\
      echo \"IMAGE_NAME=${FULL_REPOSITORY_NAME}\" >> $ARCHIVE_DIR/build.properties"
